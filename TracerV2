-- Global variable to toggle tracers
getgenv().tracer_ENABLED = true

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

-- Adjustable offset for the mouse position
local yOffset = 50 -- Change this to move the line's start point down

-- Table to store tracers for players
local tracers = {}

-- Function to create a tracer for a player
local function createTracer(player)
    if tracers[player] then
        tracers[player]:Remove()
    end

    local tracer = Drawing.new("Line")
    tracer.Thickness = 1
    tracer.Color = Color3.fromRGB(255, 0, 0) -- Red color
    tracer.Transparency = 1
    tracer.Visible = false
    tracers[player] = tracer

    -- Monitor the player's character to clean up the tracer on death
    player.CharacterAdded:Connect(function(character)
        character:WaitForChild("Humanoid").Died:Connect(function()
            if tracers[player] then
                tracers[player].Visible = false
            end
        end)
    end)
end

-- Function to update the tracers
local function updateTracers()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local humanoidRootPart = player.Character.HumanoidRootPart
            local screenPosition, onScreen = Camera:WorldToViewportPoint(humanoidRootPart.Position)

            local tracer = tracers[player]
            if tracer then
                if onScreen and getgenv().tracer_ENABLED then
                    -- Start of the line at the mouse position with Y-offset
                    tracer.From = Vector2.new(Mouse.X, Mouse.Y + yOffset)

                    -- End of the line fixed at the HumanoidRootPart's screen position
                    tracer.To = Vector2.new(screenPosition.X, screenPosition.Y)

                    -- Make the tracer visible
                    tracer.Visible = true
                else
                    -- Hide the tracer if the player is off-screen or tracers are disabled
                    tracer.Visible = false
                end
            end
        elseif tracers[player] then
            -- Hide the tracer if the character or HumanoidRootPart is invalid
            tracers[player].Visible = false
        end
    end
end

-- Function to remove all tracers
local function removeTracers()
    for _, tracer in pairs(tracers) do
        if tracer then
            tracer:Remove()
        end
    end
    tracers = {}
end

-- Create tracers for all players
Players.PlayerAdded:Connect(function(player)
    createTracer(player)
end)

-- Remove tracers when players leave
Players.PlayerRemoving:Connect(function(player)
    if tracers[player] then
        tracers[player]:Remove()
        tracers[player] = nil
    end
end)

-- Update tracers every frame
RunService.RenderStepped:Connect(function()
    if getgenv().tracer_ENABLED then
        updateTracers()
    else
        -- Remove tracers if disabled
        removeTracers()
    end
end)

-- Create tracers for existing players
for _, player in ipairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        createTracer(player)
    end
end
