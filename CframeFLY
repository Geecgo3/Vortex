-- Make sure to disconnect any existing connections when starting
if getgenv().CFrameFlyConnection then
    getgenv().CFrameFlyConnection:Disconnect()
end

-- Default toggle keybind is F
getgenv().CFrameFlyKeybind = Enum.KeyCode.F
getgenv().FlySpeed = 0.01 -- Initial default speed, can be adjusted later

getgenv().CFrameFlyEnabled = false

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local RootPart = Character:WaitForChild("HumanoidRootPart")
local Humanoid = Character:FindFirstChildOfClass("Humanoid")

local BodyVelocity = Instance.new("BodyVelocity")
BodyVelocity.Velocity = Vector3.new(0, 0, 0)
BodyVelocity.MaxForce = Vector3.new(0, math.huge, 0) -- Keeps player floating

-- Function to enable floating
local function EnableFloating()
    BodyVelocity.Parent = RootPart
end

-- Function to disable floating (restores gravity)
local function DisableFloating()
    BodyVelocity.Parent = nil
end

local function Fly()
    if not getgenv().CFrameFlyEnabled then
        DisableFloating()
        return
    end
    
    -- Enable floating only when fly is enabled
    EnableFloating()

    -- Throttle key checks to reduce unnecessary updates
    local lastUpdate = tick()

    while getgenv().CFrameFlyEnabled do
        if tick() - lastUpdate > 0.1 then -- Throttle update every 0.1 seconds
            local MoveDirection = Vector3.new()

            if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                MoveDirection = MoveDirection + (workspace.CurrentCamera.CFrame.LookVector * getgenv().FlySpeed)
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                MoveDirection = MoveDirection - (workspace.CurrentCamera.CFrame.LookVector * getgenv().FlySpeed)
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                MoveDirection = MoveDirection - (workspace.CurrentCamera.CFrame.RightVector * getgenv().FlySpeed)
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                MoveDirection = MoveDirection + (workspace.CurrentCamera.CFrame.RightVector * getgenv().FlySpeed)
            end

            -- Apply the movement only when necessary
            RootPart.CFrame = RootPart.CFrame + MoveDirection
            lastUpdate = tick()
        end
        RunService.Stepped:Wait()
    end

    -- Disable floating once fly is turned off
    DisableFloating()
end

getgenv().CFrameFlyConnection = RunService.RenderStepped:Connect(Fly)

getgenv().StopCframeFly = function()
    getgenv().CFrameFlyEnabled = false
    if getgenv().CFrameFlyConnection then
        getgenv().CFrameFlyConnection:Disconnect()
    end
    DisableFloating() -- Stop floating after stopping fly
end

-- Switch the fly toggle keybind dynamically
getgenv().SetFlyKeybind = function(newKeybind)
    getgenv().CFrameFlyKeybind = newKeybind
end

-- Detect key press to toggle fly
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == getgenv().CFrameFlyKeybind then
        getgenv().CFrameFlyEnabled = not getgenv().CFrameFlyEnabled

        if getgenv().CFrameFlyEnabled then
            print("Fly Enabled")
        else
            print("Fly Disabled")
        end
    end
end)

-- Function to adjust fly speed dynamically
getgenv().SetFlySpeed = function(newSpeed)
    getgenv().FlySpeed = newSpeed
    print("Fly speed set to: " .. newSpeed)
end

-- Ensures fly persists after reset
LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    Character = newCharacter
    RootPart = Character:WaitForChild("HumanoidRootPart")
    Humanoid = Character:FindFirstChildOfClass("Humanoid")

    BodyVelocity = Instance.new("BodyVelocity")
    BodyVelocity.Velocity = Vector3.new(0, 0, 0)
    BodyVelocity.MaxForce = Vector3.new(0, math.huge, 0)

    if getgenv().CFrameFlyEnabled then
        getgenv().CFrameFlyConnection = RunService.RenderStepped:Connect(Fly)
    end
end)

-- Clean up and destroy the script
getgenv().CFrameFlyDestroy = function()
    -- Stop fly if it's enabled
    getgenv().StopCframeFly()

    -- Disconnect all connections
    if getgenv().CFrameFlyConnection then
        getgenv().CFrameFlyConnection:Disconnect()
    end

    -- Reset variables
    getgenv().CFrameFlyEnabled = false
    getgenv().CFrameFlyConnection = nil
    getgenv().CFrameFlyKeybind = nil
    getgenv().StopCframeFly = nil
    getgenv().SetFlyKeybind = nil
    getgenv().SetFlySpeed = nil

    -- Remove BodyVelocity from the character
    if BodyVelocity.Parent then
        BodyVelocity.Parent = nil
    end

    -- Optionally destroy the script if you want to completely remove it
    script:Destroy()
end
